apply plugin: 'com.android.application'

android {
    def PROJECT_NAME = "small-music"
    def EDITION = "EDITION"
    flavorDimensions(EDITION)
    //添加时间戳后AndroidStudio推送的时候会找不到路径，为方便开发添加一个开关，调试的时候可以把开关关闭，发版的时候再把开关打开
    def timestampEnable = false
    //升级测试包开关，打升级验证版本时打开，默认关闭
    def upgradeEnable = false
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.genius.smallmusic"
        minSdkVersion 16
        targetSdkVersion 29
        if (upgradeEnable) {
            versionCode 9999
            versionName "9.9.99"
        } else {
            versionCode 1000
            versionName "1.0.00"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //需要添加签名
//            signingConfig signingConfigs.release
            zipAlignEnabled true
            shrinkResources false
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        def editionName = ""
        variant.outputs.all { output ->
            productFlavors.each { productFlavor ->
                editionName = productFlavor.name
            }
            //添加项目/仓库名称
            def fileNamePrefix = "${PROJECT_NAME}"

            if (editionName.contains("xiaobailang")) {
                fileNamePrefix += "-bailang"
            } else {
                fileNamePrefix += "-${editionName}"
            }

            if (editionName.contains("xiaobailang")) {
                fileNamePrefix += "-XBL"
            } else {
                fileNamePrefix += "-SM"
            }

            //添加升级标识
            if (upgradeEnable) {
                fileNamePrefix += "-upgrade"
            }

            //添加功能标识，混淆
            if (buildType.minifyEnabled) {
                fileNamePrefix += "-obfuscated"
            }

            //添加版本号
            fileNamePrefix += "-${versionName}"

            //添加时间戳
            if (timestampEnable) {
                fileNamePrefix += "-${releaseTime()}"
            }

            //添加签名标识
            if (buildType.name.contains("debug")) {
                fileNamePrefix += "-debug"
            } else {
                fileNamePrefix += "-release"
            }

            outputFileName = "${fileNamePrefix}.apk"
        }
    }

    productFlavors {
        smusic {
            dimension EDITION
        }
        lidada {
            dimension EDITION
        }
        xiaobailang {
            dimension EDITION
            applicationId "com.xiao.bailang"
//            versionCode 1000
//            versionName "xbl_xxx" + "." + "${currentDate()}"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //AndroidUtilCode 第三方工具类库
    implementation 'com.blankj:utilcode:1.11.1'
    //glide图片加载
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'jp.wasabeef:glide-transformations:4.0.1'

    implementation 'de.hdodenhof:circleimageview:3.0.0'

}

def static releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("GMT+8"))
}

def static currentDate() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+8"))
}